diff --git a/drivers/net/usb/r8152.c b/drivers/net/usb/r8152.c
index cee9fef925cd..d4a95b50bda6 100644
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@ -7,4 +7,5 @@
#include <linux/slab.h>
#include <linux/module.h>
+#include <linux/of_net.h>
#include <linux/netdevice.h>
#include <linux/etherdevice.h>
@@ -36,4 +37,9 @@
#define DRIVER_DESC "Realtek RTL8152/RTL8153 Based USB Ethernet Adapters"
#define MODULENAME "r8152"

+/* LED0: Activity, LED1: Link */
+static int ledsel = 0x78;
+module_param(ledsel, int, 0);
+MODULE_PARM_DESC(ledsel, "Override default LED configuration");
+
#define R8152_PHY_ID		32
@@ -1313,4 +1321,15 @@
		netif_err(tp, probe, dev, "Get ether addr fail\n");
	} else if (!is_valid_ether_addr(sa->sa_data)) {
+		/* try to get MAC address from DT */
+		if (tp->udev->dev.of_node) {
+			const u8 *mac = of_get_mac_address(tp->udev->dev.of_node);
+			if (!IS_ERR(mac) && is_valid_ether_addr(mac)) {
+				ether_addr_copy(sa->sa_data, mac);
+				netif_info(tp, probe, dev, "DT mac addr %pM\n",
+					   sa->sa_data);
+				return 0;
+			}
+		}
+
		netif_err(tp, probe, dev, "Invalid ether addr %pM\n",
			  sa->sa_data);
@@ -4606,6 +4626,9 @@
	ocp_data &= ~(RX_AGG_DISABLE | RX_ZERO_EN);
	ocp_write_word(tp, MCU_TYPE_USB, USB_USB_CTRL, ocp_data);

+	/* set customized led */
+	ocp_write_word(tp, MCU_TYPE_PLA, PLA_LEDSEL, ledsel);
+
	rtl_tally_reset(tp);

	tp->coalesce = 15000;	/* 15 us */